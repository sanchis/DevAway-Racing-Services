{"version":3,"sources":["hooks/useLazyLoadElement.js","components/pilot/index.jsx","data/karts.utils.js","config.js","context/karts.context.js","pages/ranking.jsx","components/race/index.jsx","pages/pilot-races.jsx","pages/races.jsx","components/slider-controls/index.jsx","pages/home.jsx","components/navbar/index.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["useLazyLoadElement","useState","display","setDisplay","elementRef","useRef","useEffect","observer","IntersectionObserver","entries","isIntersecting","disconnect","rootMargin","observe","current","Pilot","pilot","position","ref","className","Item","renderAs","size","alt","src","picture","name","age","team","getRankingByRace","raceName","drivers","map","drv","races","race","find","getPilotRace","sort","driver1","driver2","time1","time","time2","moment","diff","getRankingByPilot","id","driver","_id","getPilot","getRaces","Array","keys","raceNumber","kartsContext","React","createContext","globalRanking","ranking","Map","forEach","positions","valuePilot","get","set","from","getGlobalRanking","Ranking","context","useContext","Race","hightLightPilot","title","memo","PilotRaces","KartsContext","renderRaces","index","Races","SliderControls","moveNext","onMoveNext","onMoveBack","sliderCounter","setSliderCounter","timer","setTimeout","counter","clearTimeout","max","value","components","Home","currentComponent","setCurrentComponent","moveNextComponent","useCallback","length","moveBackComponent","Navbar","isActive","setIsActive","active","color","Brand","to","exact","Burger","onClick","Menu","Container","activeClassName","App","basename","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afdfe3a1.chunk.js","sourcesContent":["import { useState, useRef, useEffect } from 'react'\r\n\r\n\r\nexport default function useLazyLoadElement() {\r\n    const [display, setDisplay] = useState(false);\r\n    const elementRef = useRef();\r\n\r\n\r\n    useEffect(() => {\r\n        const onChangeObserver = (entries) => {\r\n            const el = entries[0];\r\n            if (el.isIntersecting) {\r\n                setDisplay(true);\r\n                observer.disconnect();\r\n            }\r\n        };\r\n\r\n        const observer = new IntersectionObserver(onChangeObserver, {\r\n            rootMargin: '20px'\r\n        });\r\n\r\n        observer.observe(elementRef.current);\r\n        return () => observer.disconnect();\r\n\r\n    }, []);\r\n    return { display, elementRef };\r\n}\r\n","import { Box, Media, Image, Content } from 'react-bulma-components'\r\nimport './styles.css';\r\nimport useLazyLoadElement from 'hooks/useLazyLoadElement';\r\n\r\nexport default function Pilot({ pilot, position }) {\r\n    const { display, elementRef } = useLazyLoadElement()\r\n    return (\r\n        <div ref={elementRef} className=\"pilot\">\r\n            {display ?\r\n                <Box>\r\n                    <Media>\r\n                        <h2 className=\"is-size-2 position\">{position}</h2>\r\n                        <Media.Item renderAs=\"figure\" position=\"left\">\r\n                            <Image size={64} alt=\"64x64\" src={pilot.picture} />\r\n                        </Media.Item>\r\n                        <Media.Item>\r\n                            <Content>\r\n                                <p>\r\n                                    <strong>{pilot.name}</strong> <small>Age: {pilot.age}</small>\r\n                                    <br />\r\n                            Team: {pilot.team}\r\n                                </p>\r\n                            </Content>\r\n                        </Media.Item>\r\n                    </Media >\r\n                </Box >\r\n                : null}\r\n        </div>\r\n    );\r\n}","import drivers from './data.json';\r\nimport moment from 'moment'\r\nimport { RACES_COUNT } from '../config';\r\n\r\n/**\r\n * Get data form pilot name\r\n * @param {*} id \r\n */\r\nexport function getPilot(id) {\r\n    return drivers.find(driver => driver._id === id);\r\n}\r\n\r\n/**\r\n * Get Ranking by race name\r\n * @param {*} raceName \r\n */\r\nexport function getRankingByRace(raceName) {\r\n    const raceDrivers = drivers.map(drv => {\r\n        const { races, ...pilot } = drv;\r\n        pilot.race = getPilotRace(drv, raceName);\r\n        return pilot\r\n    });\r\n    const resultDrivers = raceDrivers.sort((driver1, driver2) =>\r\n        sortTime(driver1.race.time, driver2.race.time)\r\n    )\r\n    return resultDrivers;\r\n}\r\n\r\n/**\r\n * Get ranking by pilot name\r\n * @param {*} id \r\n */\r\nexport function getRankingByPilot(id) {\r\n    const pilot = getPilot(id);\r\n    const races = pilot.races.map(race => getRankingByRace(race.name));\r\n    return { pilot, races };\r\n}\r\n\r\n/**\r\n * Get specific race from pilot\r\n * @param {*} pilot \r\n * @param {*} raceName \r\n */\r\nexport function getPilotRace(pilot, raceName) {\r\n    return pilot.races.find(race => race.name === raceName);\r\n}\r\n\r\n/**\r\n *  Get global ranking from championship\r\n */\r\nexport function getGlobalRanking() {\r\n    const ranking = new Map();\r\n    getRaces().forEach((positions) => {\r\n        /** For every race set the pilot and position */\r\n        positions.forEach((pilot, position) => {\r\n            pilot.races = pilot?.races ?? getRankingByPilot(pilot._id).races;\r\n            const valuePilot = ranking.get(pilot._id)?.position || 0;\r\n            ranking.set(pilot._id, { pilot, position: (valuePilot + position) });\r\n        });\r\n    })\r\n\r\n    /** Sort all the positions for all the races */\r\n    return Array.from(ranking, ([name, pilot]) => (pilot))\r\n        .sort((driver1, driver2) => driver1.position - driver2.position)\r\n        .map(ranking => ranking.pilot);\r\n}\r\n\r\n/**\r\n * Get all races championship\r\n */\r\nexport function getRaces() {\r\n    /** Create empty array with number of races */\r\n    return [...Array(RACES_COUNT).keys()].map(raceNumber =>\r\n        getRankingByRace(`Race ${raceNumber}`)\r\n    );\r\n}\r\n\r\n/**\r\n * Sort timing \r\n * @param {*} time1 \r\n * @param {*} time2 \r\n */\r\nfunction sortTime(time1, time2) {\r\n    return moment(time1, 'h:mm:ss:SSS').diff(moment(time2, 'h:mm:ss:SSS'))\r\n}\r\n","export const RACES_COUNT = 9;\r\nexport const MAX_SECONDS_PAGE = 30;","import { getGlobalRanking, getRaces } from 'data/karts.utils';\r\nimport React from 'react';\r\n\r\n\r\nconst kartsContext = React.createContext({\r\n    globalRanking: getGlobalRanking(),\r\n    races: getRaces(),\r\n});\r\n\r\nexport default kartsContext;","import Pilot from \"components/pilot\";\r\nimport kartsContext from \"context/karts.context\";\r\nimport { useContext } from \"react\";\r\n\r\n\r\nexport default function Ranking() {\r\n    const context = useContext(kartsContext);\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"is-size-1\">Global Ranking</h1>\r\n            {context.globalRanking.map((pilot, position) => <Pilot key={pilot.name} position={position + 1} pilot={pilot} ></Pilot>)}\r\n        </>\r\n    );\r\n}","import useLazyLoadElement from 'hooks/useLazyLoadElement';\r\nimport { Table } from 'react-bulma-components'\r\nimport React from 'react';\r\nimport './styles.css'\r\n\r\nfunction Race({ race, name, hightLightPilot }) {\r\n    const { display, elementRef } = useLazyLoadElement();\r\n\r\n    return (\r\n        <div ref={elementRef} className=\"race-pilots\">\r\n            {display ?\r\n                <>\r\n                    <h2 className=\"is-size-2\">{name}</h2>\r\n                    <Table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th><abbr title=\"Position\">Position</abbr></th>\r\n                                <th><abbr title=\"Points\">Time</abbr></th>\r\n                                <th><abbr title=\"Name\">Name</abbr></th>\r\n                                <th><abbr title=\"Team\">Team</abbr></th>\r\n                                <th><abbr title=\"Age\">Age</abbr></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {race.map((pilot, position) =>\r\n                                <tr key={position} className={pilot.name === hightLightPilot ? 'is-selected' : ''}>\r\n                                    <th>{position + 1}</th>\r\n                                    <th>{pilot.race.time}</th>\r\n                                    <th>{pilot.name}</th>\r\n                                    <th>{pilot.team}</th>\r\n                                    <th>{pilot.age}</th>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </Table>\r\n                </>\r\n                : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Race);","import Pilot from \"components/pilot\";\r\nimport Race from 'components/race'\r\nimport { useContext } from \"react\";\r\nimport KartsContext from 'context/karts.context';\r\n\r\n\r\nexport default function PilotRaces() {\r\n    const context = useContext(KartsContext);\r\n\r\n    const renderRaces = (pilot) =>\r\n        pilot.races.map((race, index) =>\r\n            <Race name={`Race ${index + 1}`} key={pilot.name + index} race={race} hightLightPilot={pilot.name} ></Race>\r\n        );\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"is-size-1\">Pilot Ranking</h1>\r\n            {context.globalRanking.map((pilot, position) =>\r\n                <div key={pilot._id + position}>\r\n                    <Pilot position={position + 1} pilot={pilot} ></Pilot>\r\n                    {renderRaces(pilot)}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}","import Race from 'components/race'\r\nimport { useContext } from \"react\";\r\nimport kartsContext from \"context/karts.context\";\r\n\r\nexport default function Races() {\r\n    const context = useContext(kartsContext);\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"is-size-1\">Races</h1>\r\n            {context.races.map((race, raceNumber) =>\r\n                <Race key={`races ${raceNumber}`} race={race} name={`Race ${raceNumber + 1}`}></Race>\r\n            )}\r\n        </>\r\n    );\r\n}","import { useEffect, useState } from 'react';\r\nimport { Progress } from 'react-bulma-components'\r\nimport { MAX_SECONDS_PAGE } from 'config';\r\n\r\nexport default function SliderControls({ onMoveNext: moveNext, onMoveBack: moveBack }) {\r\n    const [sliderCounter, setSliderCounter] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setSliderCounter((counter) => counter === MAX_SECONDS_PAGE ? 0 : counter + 1)\r\n            if (sliderCounter === MAX_SECONDS_PAGE) {\r\n                moveNext();\r\n            }\r\n        }, 1000);\r\n        return () => clearTimeout(timer);\r\n    }, [sliderCounter, moveNext]);\r\n\r\n    return (\r\n        <>\r\n            <Progress max={MAX_SECONDS_PAGE} value={sliderCounter} size=\"small\" />\r\n        </>\r\n    );\r\n\r\n}\r\n","\r\nimport { useCallback, useState } from \"react\";\r\n\r\nimport SliderControls from 'components/slider-controls'\r\n\r\nimport Ranking from 'pages/ranking';\r\nimport Races from 'pages/races';\r\nimport PilotRaces from 'pages/pilot-races';\r\n\r\nconst components = [\r\n    <Ranking></Ranking>,\r\n    <PilotRaces></PilotRaces>,\r\n    <Races></Races>\r\n];\r\nexport default function Home() {\r\n    const [currentComponent, setCurrentComponent] = useState(0);\r\n\r\n    const moveNextComponent = useCallback(() => {\r\n        setCurrentComponent(currentComponent =>\r\n            currentComponent === components.length - 1 ? 0 : currentComponent + 1\r\n        );\r\n    }, []);\r\n\r\n    const moveBackComponent = useCallback(() => {\r\n        setCurrentComponent(currentComponent =>\r\n            currentComponent === 0 ? components.length - 1 : currentComponent - 1\r\n        );\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <SliderControls\r\n                onMoveNext={() => moveNextComponent()}\r\n                onMoveBack={() => moveBackComponent()}\r\n            />\r\n            { components[currentComponent]}\r\n        </>\r\n    );\r\n}","import { Navbar as BulmaNavbar } from 'react-bulma-components';\r\nimport React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport './styles.css';\r\n\r\nexport default function Navbar() {\r\n    const [isActive, setIsActive] = React.useState(false);\r\n\r\n    return (\r\n        <BulmaNavbar\r\n            active={isActive}\r\n            color=\"primary\">\r\n            <BulmaNavbar.Brand>\r\n                <NavLink className=\"brand\" to=\"/\" exact >\r\n                    <img src=\"./logo-mini.png\" alt=\"\" />\r\n                </NavLink>\r\n                <BulmaNavbar.Burger onClick={() => setIsActive(!isActive)} />\r\n            </BulmaNavbar.Brand>\r\n            <BulmaNavbar.Menu >\r\n                <BulmaNavbar.Container>\r\n                    <NavLink className=\"navbar-item\" to=\"/ranking\" exact activeClassName=\"is-active\">Global Ranking</NavLink>\r\n                    <NavLink className=\"navbar-item\" to=\"/pilot-races\" activeClassName=\"is-active\">Pilot Races</NavLink>\r\n                    <NavLink className=\"navbar-item\" to=\"/races\" activeClassName=\"is-active\">Races</NavLink>\r\n                </BulmaNavbar.Container>\r\n            </BulmaNavbar.Menu>\r\n        </BulmaNavbar>\r\n    );\r\n}","import './App.css';\r\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\n\r\nimport Ranking from 'pages/ranking'\r\nimport PilotRaces from 'pages/pilot-races'\r\nimport Races from 'pages/races'\r\nimport Home from 'pages/home'\r\n\r\nimport Navbar from 'components/navbar';\r\nimport { Container, Section } from 'react-bulma-components'\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <>\r\n            <BrowserRouter basename=\"/DevAway-Racing-Services\">\r\n                <Navbar></Navbar>\r\n                <Section>\r\n                    <Container>\r\n                        <Switch>\r\n                            <Route\r\n                                exact\r\n                                path=\"/\">\r\n                                <Home></Home>\r\n                            </Route>\r\n                            <Route\r\n                                exact\r\n                                path=\"/ranking\" >\r\n                                <Ranking></Ranking>\r\n                            </Route>\r\n                            <Route\r\n                                exact\r\n                                path=\"/pilot-races\" >\r\n                                <PilotRaces></PilotRaces>\r\n                            </Route>\r\n                            <Route\r\n                                exact\r\n                                path=\"/races\"\r\n                                render={() => <Races />} />\r\n                        </Switch>\r\n                    </Container>\r\n                </Section>\r\n            </BrowserRouter>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}